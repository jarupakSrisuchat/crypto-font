{"version":3,"sources":["assets/images/parts/body/0.png","assets/images/parts/body/1.png","assets/images/parts/body/2.png","assets/images/parts/eyes/0.png","assets/images/parts/eyes/1.png","assets/images/parts/eyes/2.png","assets/images/parts/eyes/3.png","assets/images/parts/head/0.png","assets/images/parts/head/1.png","assets/images/parts/head/2.png","assets/images/parts/head/3.png","assets/images/parts/head/4.png","assets/images/parts/head/5.png","assets/images/parts/head/6.png","assets/images/parts/shirt/0.png","assets/images/parts/shirt/1.png","assets/images/parts/shirt/2.png","assets/images/parts/shirt/3.png","assets/images/parts/shirt/4.png","assets/images/parts/shirt/5.png","assets/images/parts/shirt/6.png","assets/images/parts/acc/0.png","assets/images/parts/acc/1.png","assets/images/parts/acc/2.png","assets/images/parts/acc/3.png","assets/images/parts/acc/4.png","assets/images/parts/acc/5.png","assets/images/parts/acc/6.png","logo.svg","styles/global.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/cFontInfo/cFontInfoReducer.js","redux/store.js","redux/data/dataActions.js","redux/cFontInfo/cFontInfoActions.js","redux/blockchain/blockchainActions.js","pages/home.js","pages/lands.js","components/Navbar/NavbarElements.js","pages/inventory.js","pages/marketplace.js","components/cFontInfoRenderer.js","pages/font.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js","components/cFontRenderer.js"],"names":["Screen","styled","div","image","p","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","w","m","mxw","mxh","mnw","mnh","TextTitle","TextDescription","fw","lh","TextID","initialState","loading","account","cFont","eBitcoin","web3","errorMsg","blockchainReducer","state","action","type","payload","allFont","MyFont","tokenAllow","error","dataReducer","cFontOwner","cFontInfo","cFontInfoReducer","rootReducer","combineReducers","blockchain","data","font","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","getcFont","call","getIdsOfOwner","_address","NFTaddress","allowance","console","log","fetchcFontFailed","connectFailed","updateAccount","Home","props","Lands","Nav","nav","NavLogo","Link","NavLink","Bars","FaBars","NavMenu","Inventory","useDispatch","useState","setLoading","useEffect","style","bigInt","className","disabled","onClick","e","preventDefault","createRandomcFont","send","from","once","err","then","receipt","approve","flexWrap","map","item","index","indexOf","id","to","padding","name","Power","Size","Marketplace","Cfontinforenderer","size","owner","dnaStr","String","dna","rarity","FontInfo","useParams","useSelector","process","Web3","deployedNetwork","networks","cFontContract","eth","Contract","abi","address","ownerOf","cFonts","fetchcFont","Navbar","App","phudleNFT","window","ethereum","request","method","accounts","networkId","cFontNetworkData","eBitcoinNetworkData","eBitcoinContract","on","location","reload","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","Cfontrenderer","length","first","substring","second","third","fouth","str","toString","c","unicode","eval","phudleStyle","width","height","position","display","textAlign","justifyContent","alignItems","fontSize","color","textShadow"],"mappings":"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","file":"static/js/main.54c74c08.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/0.ebf35898.png\";","export default __webpack_public_path__ + \"static/media/1.46ffe314.png\";","export default __webpack_public_path__ + \"static/media/2.8c8a86a4.png\";","export default __webpack_public_path__ + \"static/media/0.6eb71c39.png\";","export default __webpack_public_path__ + \"static/media/1.ef3f10f5.png\";","export default __webpack_public_path__ + \"static/media/2.5d79c353.png\";","export default __webpack_public_path__ + \"static/media/3.34ed5344.png\";","export default __webpack_public_path__ + \"static/media/0.7fdc05a8.png\";","export default __webpack_public_path__ + \"static/media/1.881b668b.png\";","export default __webpack_public_path__ + \"static/media/2.b38e737f.png\";","export default __webpack_public_path__ + \"static/media/3.dc26f3a7.png\";","export default __webpack_public_path__ + \"static/media/4.522409ff.png\";","export default __webpack_public_path__ + \"static/media/5.82e780c7.png\";","export default __webpack_public_path__ + \"static/media/6.f2f100df.png\";","export default __webpack_public_path__ + \"static/media/0.a727c6ad.png\";","export default __webpack_public_path__ + \"static/media/1.90246713.png\";","export default __webpack_public_path__ + \"static/media/2.84ad16ca.png\";","export default __webpack_public_path__ + \"static/media/3.87a380ec.png\";","export default __webpack_public_path__ + \"static/media/4.96b28139.png\";","export default __webpack_public_path__ + \"static/media/5.340b0959.png\";","export default __webpack_public_path__ + \"static/media/6.6a8f097d.png\";","export default __webpack_public_path__ + \"static/media/0.a3330d90.png\";","export default __webpack_public_path__ + \"static/media/1.dbcdeba4.png\";","export default __webpack_public_path__ + \"static/media/2.b8bfe5f9.png\";","export default __webpack_public_path__ + \"static/media/3.7e4e26c5.png\";","export default __webpack_public_path__ + \"static/media/4.ceac3e16.png\";","export default __webpack_public_path__ + \"static/media/5.da465d8b.png\";","export default __webpack_public_path__ + \"static/media/6.ab75836f.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${({ p }) => ( p ? p : \"none\" )};\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width:  ${({ w }) => ( w ? w : \"100%\" )};\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin: ${({ m }) => ( m ? m : \"none\" )};\r\n  padding: ${({ p }) => ( p ? p : \"none\" )};\r\n  max-width: ${({ mxw }) => ( mxw ? mxw : \"none\" )};\r\n  max-height: ${({ mxh }) => ( mxh ? mxh : \"none\" )};\r\n  min-width: ${({ mnw }) => ( mnw ? mnw : \"none\" )};\r\n  min-height: ${({ mnh }) => ( mnh ? mnh : \"none\" )};\r\n  `;\r\n\r\nexport const Slideshow = styled.div`\r\n  transition: ease 1000ms;\r\n  `;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 36px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-size: 24px;\r\n  font-weight: ${({ fw }) => ( fw ? fw : \"200\" )};\r\n  line-height: ${({ lh }) => ( lh ? lh : \"1.5\" )};\r\n`;\r\n\r\nexport const TextID = styled.p`\r\n  color: grey;\r\n  font-size: 14px;\r\n  font-weight: 200;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\n","const initialState = {\r\n    loading: false,\r\n    account: null,\r\n    cFont: null,\r\n    eBitcoin: null,\r\n    web3: null,\r\n    errorMsg: \"\",\r\n  };\r\n  \r\n  const blockchainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"CONNECTION_REQUEST\":\r\n        return {\r\n          ...initialState,\r\n          loading: true,\r\n        };\r\n      case \"CONNECTION_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          account: action.payload.account,\r\n          cFont: action.payload.cFont,\r\n          eBitcoin: action.payload.eBitcoin,\r\n          web3: action.payload.web3,\r\n        };\r\n      case \"CONNECTION_FAILED\":\r\n        return {\r\n          ...initialState,\r\n          loading: false,\r\n          errorMsg: action.payload,\r\n        };\r\n      case \"UPDATE_ACCOUNT\":\r\n        return {\r\n          ...state,\r\n          account: action.payload.account,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default blockchainReducer;","const initialState = {\r\n    loading: false,\r\n    allFont: [],\r\n    MyFont: [],\r\n    tokenAllow: 0,\r\n    error: false,\r\n    errorMsg: \"\",\r\n  };\r\n  \r\n  const dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"CHECK_DATA_REQUEST\":\r\n        return {\r\n          ...initialState,\r\n          loading: true,\r\n        };\r\n      case \"CHECK_DATA_SUCCESS\":\r\n        return {\r\n          ...initialState,\r\n          loading: false,\r\n          allFont: action.payload.allFont,\r\n          MyFont: action.payload.MyFont,\r\n          tokenAllow: action.payload.tokenAllow,\r\n        };\r\n      case \"CHECK_DATA_FAILED\":\r\n        return {\r\n          ...initialState,\r\n          loading: false,\r\n          error: true,\r\n          errorMsg: action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default dataReducer;","const initialState = {\r\n    loading: false,\r\n    cFontOwner: \"\",\r\n    cFontInfo: [],\r\n    error: false,\r\n    errorMsg: \"\",\r\n  };\r\n  \r\n  const cFontInfoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"CHECK_cFont_REQUEST\":\r\n        return {\r\n          ...initialState,\r\n          loading: true,\r\n        };\r\n      case \"CHECK_cFont_SUCCESS\":\r\n        return {\r\n          ...initialState,\r\n          loading: false,\r\n          cFontOwner: action.payload.cFontOwner,\r\n          cFontInfo: action.payload.cFontInfo,\r\n        };\r\n      case \"CHECK_cFont_FAILED\":\r\n        return {\r\n          ...initialState,\r\n          loading: false,\r\n          error: true,\r\n          errorMsg: action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default cFontInfoReducer;","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\nimport cFontInfoReducer from \"./cFontInfo/cFontInfoReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n  font: cFontInfoReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n        \r\n      let allFont = await store\r\n        .getState()\r\n        .blockchain.cFont.methods.getcFont()\r\n        .call();\r\n      let MyFont = await store\r\n        .getState()\r\n        .blockchain.cFont.methods.getIdsOfOwner(account)\r\n        .call();\r\n      let NFTaddress = await store\r\n        .getState()\r\n        .blockchain.cFont._address;\r\n      let tokenAllow = await store\r\n        .getState()\r\n        .blockchain.eBitcoin.methods.allowance(account, NFTaddress)\r\n        .call();\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          allFont,\r\n          MyFont,\r\n          tokenAllow,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};","// log\r\nimport store from \"../store\";\r\nimport cFont from \"../../contracts/cryptoFont.json\";\r\nimport Web3 from \"web3\";\r\n\r\nconst fetchcFontRequest = () => {\r\n  return {\r\n    type: \"CHECK_cFont_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchcFontSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_cFont_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchcFontFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_cFont_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchcFont = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchcFontRequest());\r\n\r\n    console.log(process.env.REACT_APP_networkID);\r\n    let web3 = new Web3(process.env.REACT_APP_RPC);\r\n    try {\r\n        const deployedNetwork = cFont.networks[process.env.REACT_APP_networkID];\r\n        const cFontContract = new web3.eth.Contract(\r\n            cFont.abi,\r\n            deployedNetwork.address,\r\n        );\r\n        let cFontOwner = await cFontContract.methods.ownerOf(id).call()\r\n        let cFontInfo = await cFontContract.methods.cFonts(id).call()\r\n        \r\n      dispatch(\r\n        fetchcFontSuccess({\r\n            cFontOwner,\r\n            cFontInfo,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchcFontFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};","// constants\r\nimport Web3 from \"web3\";\r\nimport eBitcoin from \"../../contracts/eBitcoin.json\";\r\nimport cFont from \"../../contracts/cryptoFont.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\nimport { fetchcFont } from \"../cFontInfo/cFontInfoActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    if (window.ethereum) {\r\n      let web3 = new Web3(window.ethereum);\r\n      try {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_accounts\",\r\n        });\r\n        const networkId = await window.ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        const cFontNetworkData = await cFont.networks[networkId];\r\n        const eBitcoinNetworkData = await eBitcoin.networks[networkId];\r\n        \r\n        if (cFontNetworkData && eBitcoinNetworkData) {\r\n          const cFontContract = new web3.eth.Contract(\r\n            cFont.abi,\r\n            cFontNetworkData.address\r\n          );\r\n          const eBitcoinContract = new web3.eth.Contract(\r\n            eBitcoin.abi,\r\n            eBitcoinNetworkData.address\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              cFont: cFontContract,\r\n              eBitcoin: eBitcoinContract,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          window.ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Polygon.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(err));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};","import React from 'react';\r\nimport * as s from \"../styles/global\";\r\nimport cFontRenderer from '../components/cFontRenderer';\r\nimport { useEffect, useState } from \"react\";\r\n  \r\nconst Home = (props) => {\r\n\r\n  return (\r\n\r\n    <s.Screen>\r\n        <s.Container ai=\"center\">\r\n            <s.Container w=\"80%\" ai=\"center\">\r\n            <s.SpacerLarge/>\r\n            <s.SpacerLarge/>\r\n            <s.TextTitle>\r\n                What is cFont ?\r\n            </s.TextTitle>\r\n            <s.TextDescription>\r\n                cFont is ERC721 that provide mining function for mining eBTC\r\n            </s.TextDescription>\r\n            <s.SpacerLarge/>\r\n            <s.SpacerLarge/>\r\n            <s.TextTitle>\r\n                Why eBTC ?\r\n            </s.TextTitle>\r\n            <s.TextDescription>\r\n                &nbsp;&nbsp;&nbsp; I want to make a limited asset similar \r\n                to Bitcoin happen on EVM. This is because current Bitcoin \r\n                cannot be directly linked to the EVM protocol and requires \r\n                a bridge to connect. eBTC will resolve this issue to balance an\r\n                EVM's supply and create a valuable asset for its accumulation. \r\n                eBTC will have a total supply of 10 million and will never \r\n                be created again. The insights detailed can be viewed here.\r\n            </s.TextDescription>\r\n            <s.TextDescription>\r\n                {/* - Isaak Solovev - */}\r\n            </s.TextDescription>\r\n            </s.Container>\r\n            </s.Container>\r\n    </s.Screen>\r\n  );\r\n};\r\n  \r\nexport default Home;","import React from 'react';\r\n  \r\nconst Lands = (props) => {\r\n    console.log(props.blockchain)\r\n  return (\r\n    null\r\n  );\r\n};\r\n  \r\nexport default Lands;","import { FaBars } from \"react-icons/fa\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Nav = styled.nav`\r\n    height: 50px;\r\n    display: flex;\r\n    padding: 10px;\r\n    align-items: center;\r\n    z-index: 12;\r\n`;\r\nexport const NavLogo = styled(Link)`\r\n\r\n\r\n  cursor: pointer;\r\n  color: #fff;\r\n  font-size: 2rem;\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n    position: flex;\r\n    float: left;\r\n    top: 0;\r\n    right: 0;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\ncolor: #fff;\r\ndisplay: flex;\r\nalign-items: center;\r\ntext-decoration: none;\r\npadding: 0 1rem;\r\nheight: 100%;\r\ncursor: pointer;\r\n&.active {\r\n  color:white;\r\n}\r\n&:hover {\r\n  color: grey;\r\n}\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n  @media screen and (max-width: 768px) {\r\n    display: flex;\r\n    position: flex;\r\n    float: left;\r\n    margin: 20px;\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenuCollapse = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: transparent;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: 1px solid #fff;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  margin-left: 24px;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #808080;\r\n  }\r\n`;","import React from 'react';\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport * as s from \"../styles/global\";\r\nimport Cfontrenderer from '../components/cFontRenderer';\r\nimport { faTrash,faDrumstickBite } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport bigInt from 'big-integer';\r\nimport {\r\n    Nav,\r\n    NavLogo,\r\n    NavLink,\r\n    Bars,\r\n    NavMenu,\r\n    NavBtn,\r\n    NavBtnLink,\r\n} from \"../components/Navbar/NavbarElements.js\";\r\n  \r\nconst Inventory = (props) => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.blockchain.account !== \"\" && props.blockchain.cFont !== null) {\r\n          dispatch(fetchData(props.blockchain.account));\r\n        }\r\n      }, [props.blockchain.cFont]);\r\n      console.log(props.data);\r\n    const reverseSwap = (id) => {\r\n        setLoading(true);\r\n        props.blockchain.cFont.methods\r\n          .reverseSwap(id)\r\n          .send({\r\n            from: props.blockchain.account\r\n          })\r\n          .once(\"error\", (err) => {\r\n            setLoading(false);\r\n            console.log(err);\r\n          })\r\n          .then((receipt) => {\r\n            setLoading(false);\r\n            console.log(receipt);\r\n            dispatch(fetchData(props.blockchain.account));\r\n          });\r\n      }\r\n    \r\n      const allowToken = () => {\r\n        setLoading(true);\r\n        props.blockchain.eBitcoin.methods\r\n          .approve(props.blockchain.cFont._address, \"100000000000000000000000000000000\")\r\n          .send({\r\n            from: props.blockchain.account\r\n          })\r\n          .once(\"error\", (err) => {\r\n            setLoading(false);\r\n            console.log(err);\r\n          })\r\n          .then((receipt) => {\r\n            setLoading(false);\r\n            console.log(receipt);\r\n            dispatch(fetchData(props.blockchain.account));\r\n          });\r\n      }\r\n      const mint = () => {\r\n        setLoading(true);\r\n        props.blockchain.cFont.methods\r\n          .createRandomcFont()\r\n          .send({\r\n            from: props.blockchain.account\r\n          })\r\n          .once(\"error\", (err) => {\r\n            setLoading(false);\r\n            console.log(err);\r\n          })\r\n          .then((receipt) => {\r\n            setLoading(false);\r\n            console.log(receipt);\r\n            dispatch(fetchData(props.blockchain.account));\r\n          });\r\n      };\r\n    \r\n      \r\n\r\n  return (\r\n    <s.Container ai={\"center\"} style={{ }}>\r\n        <s.SpacerSmall />\r\n        {bigInt(props.data.tokenAllow) > bigInt(200 * 10**18) ? \r\n        (<button className= \"button button2\"\r\n          disabled={loading ? 1 : 0}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            mint();\r\n          }}\r\n        >\r\n          Mint cFont (1 eBTC)\r\n        </button>) :  (<button className= \"button button2\"\r\n          disabled={loading && !props.blockchain  ? 1 : 0}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            allowToken();\r\n          }}\r\n        >\r\n          Allow Token\r\n        </button>)}\r\n        \r\n        <s.SpacerMedium />\r\n          <s.Container jc={\"center\"} fd={\"row\"} style={{ flexWrap: \"wrap\"}}>\r\n            {props.data.allFont.map((item, index) => {\r\n              if(props.data.MyFont.indexOf(item.id)>-1){\r\n                return (\r\n                    <NavLink key={item.id} to={\"/font/\"+item.id}>\r\n                  <s.Container className=\"card m-5\" key={index} style={{ padding: \"15px\" }}>\r\n                      <Cfontrenderer font={item}/>\r\n                    {/* <cFontRenderer className=\"phudImg\" font={item} /> */}\r\n                    <s.SpacerXSmall />\r\n                    <s.Container>\r\n                      <s.TextID>#{item.id}</s.TextID>\r\n                      <s.TextDescription>NAME: {item.name}</s.TextDescription>\r\n                      <s.TextDescription>POWER: {item.Power}</s.TextDescription>\r\n                      <s.TextDescription>Size: {(20 + (item.Size % 80)) + 'px'}</s.TextDescription>\r\n                      <s.Container fd={\"row\"}>\r\n                      {/* <button className=\"button-s button2 feed\" onClick={(e) => {\r\n                      e.preventDefault();\r\n                      allowToken();\r\n                      }}>\r\n                        <FontAwesomeIcon \r\n                       icon={faDrumstickBite} /> </button>\r\n                       <button \r\n                       value={item.id}\r\n                       className=\"button-s button2 trash\" \r\n                       onClick={(e) => {\r\n                      e.preventDefault();\r\n                      reverseSwap(item.id);\r\n                      }}>\r\n                        <FontAwesomeIcon value={item.id} icon={faTrash} /> \r\n                        </button> */}\r\n                      </s.Container>\r\n                    </s.Container>\r\n                  </s.Container>\r\n                  </NavLink>\r\n                );\r\n              }\r\n            })}\r\n          </s.Container>\r\n          \r\n      </s.Container>\r\n\r\n  );\r\n        }\r\n  \r\nexport default Inventory;","import React from 'react';\r\nimport * as s from \"../styles/global\";\r\n  \r\nconst Marketplace = (props) => {\r\n    console.log(props.data)\r\n  return (\r\n    // <s.Container jc={\"center\"} fd={\"row\"} style={{ flexWrap: \"wrap\"}}>\r\n    //         {props.data.allPhudles.map((item, index) => {\r\n    //             return (\r\n    //               <s.Container className=\"card m-5\" key={index} style={{ padding: \"15px\" }}>\r\n    //                 <PhudleRenderer className=\"phudImg\" phudle={item} />\r\n    //                 <s.SpacerXSmall />\r\n    //                 <s.Container>\r\n    //                   <s.TextID>#{item.id}</s.TextID>\r\n    //                   <s.TextDescription>Seller: {}</s.TextDescription>\r\n    //                   <s.TextDescription>NAME: {item.name}</s.TextDescription>\r\n    //                   <s.TextDescription>RARITY: {item.rarity}</s.TextDescription>\r\n    //                   <s.Container fd={\"row\"}>\r\n                      \r\n    //                   </s.Container>\r\n    //                 </s.Container>\r\n    //               </s.Container>\r\n    //             );\r\n    //         })}\r\n    //       </s.Container>\r\n    null\r\n  );\r\n};\r\n  \r\nexport default Marketplace;","import React from \"react\";\r\nimport { parts } from \"../parts/partsName\";\r\nimport * as s from \"../styles/global.js\";\r\n\r\nconst Cfontinforenderer = ({ font = null,size = 500, style, owner= \"\" }) => {\r\n  if (!font) {\r\n    return null;\r\n  }\r\n\r\n  let dnaStr = String(font.dna);\r\n\r\n\r\n  return (\r\n    <s.Container flex=\"1\" ai=\"start\" mnw={\"400px\"} m={\"30px\"}>\r\n      <s.TextDescription>Name: {font.name}</s.TextDescription>\r\n      <s.TextDescription>ID: {font.id}</s.TextDescription>\r\n      <s.TextDescription>DNA: {dnaStr}</s.TextDescription>\r\n      <s.TextDescription>Owner: {owner}</s.TextDescription>\r\n      <s.TextDescription>Rarity: {font.rarity}</s.TextDescription>\r\n    </s.Container>\r\n  );\r\n};\r\n\r\nexport default Cfontinforenderer;","import React, { useEffect } from 'react';\r\nimport * as s from \"../styles/global\";\r\nimport Cfontrenderer from '../components/cFontRenderer';\r\nimport Cfontinforenderer from '../components/cFontInfoRenderer';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchcFont } from \"../redux/cFontInfo/cFontInfoActions\";\r\nimport { useParams } from 'react-router';\r\n  \r\nconst FontInfo = (props) => {\r\n\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const font = useSelector((state) => state.font);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchcFont(id));\r\n      }, [id]);\r\n    \r\n    \r\n    console.log(font.cFontInfo);\r\n  return (\r\n      <s.Screen>\r\n          <s.SpacerLarge/>\r\n          <s.SpacerLarge/>\r\n          <s.Container ai=\"center\">\r\n            <s.Container flex=\"1\" fd=\"row\" jc=\"center\" ai=\"center\" mxw=\"980px\" mxh=\"980px\" style={{ flexWrap: \"wrap\"}}>\r\n            <s.Container>\r\n                <Cfontrenderer font={font.cFontInfo}></Cfontrenderer>\r\n                </s.Container>\r\n                <s.Container >\r\n                <Cfontinforenderer font={font.cFontInfo} owner={font.cFontOwner}></Cfontinforenderer>\r\n                </s.Container>\r\n            </s.Container>\r\n            </s.Container>\r\n        </s.Screen>\r\n        );\r\n};\r\n  \r\nexport default FontInfo;","import React from \"react\";\r\nimport {\r\n    Nav,\r\n    NavLogo,\r\n    NavLink,\r\n    Bars,\r\n    NavMenu,\r\n    NavBtn,\r\n    NavBtnLink,\r\n} from \"./NavbarElements\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n           <Nav>\r\n           <Bars />\r\n            <NavLogo to=\"/crypto-font/\">\r\n                cFont\r\n            </NavLogo>\r\n            <NavMenu>\r\n                <NavLink to=\"/crypto-font/inventory\">\r\n                    Inventory\r\n                </NavLink>\r\n                <NavLink to=\"/crypto-font/lands\">\r\n                    Lands\r\n                </NavLink>\r\n                <NavLink to=\"/crypto-font/marketplace\">\r\n                    Marketplace\r\n                </NavLink>\r\n                <NavLink to=\"/crypto-font/play\">\r\n                    Metaverse\r\n                </NavLink>\r\n            </NavMenu> \r\n            \r\n           </Nav> \r\n        </>\r\n    );\r\n};\r\nexport default Navbar;","import logo from './logo.svg';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './App.css';\r\nimport * as s from \"./styles/global\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport {\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  Outlet\r\n} from \"react-router-dom\";\r\nimport Home from \"./pages/home.js\"\r\nimport Lands from \"./pages/lands.js\"\r\nimport Inventory from \"./pages/inventory.js\"\r\nimport Marketplace from \"./pages/marketplace.js\"\r\nimport FontInfo from \"./pages/font.js\"\r\nimport Navbar from './components/Navbar';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n\r\n  console.log(blockchain);\r\n\r\n  useEffect(() => {\r\n    if (blockchain.account !== \"\" && blockchain.phudleNFT !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  }, [blockchain.phudleNFT]);\r\n\r\n  \r\n\r\n  return (\r\n    <s.Screen>\r\n      <div>\r\n        <s.Container fd={\"row\"} jc='space-between'>\r\n        <Navbar/>\r\n        <s.Container ai=\"right\" flex=\"0\" fd=\"row\">\r\n        <button className= \"network button\">BSCTEST</button>\r\n        {blockchain.account === \"\" || blockchain.cFont === null ? (\r\n        <button className= \"login button button2 right\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(connect());\r\n          }}\r\n        >\r\n          CONNECT\r\n        </button>\r\n    ) : (\r\n      <button className= \"login address button button2\">{blockchain.account}</button>\r\n    )}\r\n    </s.Container>\r\n    </s.Container>\r\n    <s.Container  ai=\"center\">\r\n    <s.TextDescription>{blockchain.errorMsg != \"\" ? (blockchain.errorMsg) : (null)}</s.TextDescription>\r\n    </s.Container>\r\n      <Outlet />\r\n    </div>\r\n        <Routes>\r\n      <Route path=\"/crypto-font/\" element={<Home/>} />\r\n      <Route path=\"/crypto-font/inventory\" element={<Inventory blockchain={blockchain} data={data} />} />\r\n      <Route path=\"/crypto-font/lands\" element={<Lands/>} />\r\n      <Route path=\"/crypto-font/marketplace\" element={<Marketplace blockchain={blockchain} data={useSelector((state) => state.data)} />}/>\r\n      <Route path=\"/crypto-font/font/:id\" element={<FontInfo blockchain={blockchain}  />}/>\r\n      {/* <Route path=\"/play\" element={<Play />} /> */}\r\n    </Routes>\r\n    \r\n  </s.Screen>\r\n);\r\n}\r\n\r\n// function Home() {\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n  \r\n\r\n  \r\n\r\n//   return (\r\n\r\n    \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { faAlignCenter, faRubleSign } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\n// cards\r\nimport { parts } from \"../parts/parts\";\r\n\r\nconst Cfontrenderer = ({ font = null, size = 200, style }) => {\r\n  if (!font || font.length <= 0) {\r\n    return null;\r\n  }\r\n\r\n  let dnaStr = String(font.dna);\r\n\r\n//   while (dnaStr.length < 10) dnaStr = \"0\" + dnaStr;\r\n\r\n  // let phudleDetail = {\r\n  //   // body: dnaStr.substring(0, 2) % 3,\r\n  //   // eyes: dnaStr.substring(2, 4) % 4,\r\n  //   // head: dnaStr.substring(4, 6) % 7,\r\n  //   // shirt: dnaStr.substring(6, 8) % 7,\r\n  //   // accessory: dnaStr.substring(8, 10) % 7,\r\n  //   // name: phudle.name,\r\n  // };\r\n\r\n  let first = dnaStr.substring(0, 3) % 256;\r\n  let second = dnaStr.substring(3, 6) % 256;\r\n  let third = dnaStr.substring(6, 9) % 256;\r\n  let fouth = dnaStr.substring(9, 12) % 256;\r\n  let str = (\"0000\" + font.Power).substring(font.Power.toString().length);\r\n  let c =  first.toString() +\",\"+ second.toString() +\",\"+ third.toString() +\",\"+ \"1\";\r\n\r\n  let unicode = (eval('\"\\\\u' + str + '\"'));\r\n\r\n\r\n  const phudleStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n        display: \"flex\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        fontSize: (20 + (font.Size % 80)) + 'px',\r\n        color: \"white\",\r\n        textShadow: `0px 0px 50px rgb(${c})`,\r\n        ...style,\r\n      }}\r\n    >\r\n      {unicode}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cfontrenderer;"],"sourceRoot":""}